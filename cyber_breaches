#!/bin/bash

# Check if file exists
if [[ ! -f "$1" ]] 
then
    echo "File not found!"
    exit 1;
fi

# Command line options
options="

		maxstate
			Returns the two letter code for the state that has the largest number of incidents across all years, and the corresponding count. 
			(If more than one, any one of them is returned).

		maxyear
			Returns the year with the greatest number of incidences across all the states, and the corresponding count. 
			(If more than one, any one of them is returned).

		A two letter state code (AZ)
			Returns the year with the maximum number of incidents, and the count. 
			(If more than one, any one of them is returned).

		A four digit year (YYYY)
			Returns the state with the maximum number of incidents for that year, and the count. 
			(If more than one, any one of them is returned).
			"

# Get the file name
file=$1

# Get the command
cmd=$2;

if [[ $cmd == "max"* ]]; 
then
	if [[ $cmd == "maxstate" ]]; 
	then
		# State with most occurances in file
		topState=$(cut -f 2 "$file" | sort | uniq -c | sort -rn | head -n 1)

		# Extract state code and occurences
		occurences=$(echo $topState | cut -d ' ' -f1)
		state=$(echo $topState | cut -d ' ' -f2)

		echo "State with greatest number of incidents is: $state with count $occurences
		"

		exit 0;
	elif [[ $cmd == "maxyear" ]]; 
	then
		# Year with most occurances in file
		topYear=$(cut -f 8 "$file" | sort | uniq -c | sort -rn | head -n 1)

		# Extract state code and occurences
		occurences=$(echo $topYear | cut -d ' ' -f1)
		year=$(echo $topYear | cut -d ' ' -f2)

		echo "Year with greatest number of incidents is: $year with count $occurences
		"

		exit 0;
	else
		echo "The max commands are either maxstate or maxyear
		"
		exit 1;
	fi
elif [[ $cmd =~ ^[A-Za-z]{2}$ ]];
then
	# Convert to upper case
	cmd=${cmd^^}

	# Extract the years where recorded breaches occurred (for iteration)
	years=$(cut -f8 -d"	" "$file" | tail -n +2 | sort | uniq)
	
	# Initialize the max variables
	maxCount=0
	maxYear=""

	# Iterate through each year
	for year in $years; do
		# Count the occurrences of the state for the current year
		count=$(cut -f2,8 -d"	" "$file" | tail -n +2| grep "^$cmd	$year" | wc -l)

		# Check count is larger than current maximum
		if [[ $count -gt $maxCount ]]; 
		then
        	maxCount=$count
        	maxYear=$year
    	fi
	done

	if [[ $maxCount -eq 0 ]];
	then
		echo "The state does not appear in the provided file with filename: $file.
		"
		exit 1
	else
		echo "Year with greatest number of incidents for $cmd is in $maxYear with count $maxCount
		"
		exit 0
	fi
elif [[ $cmd =~ ^[0-9]{4}$ ]];
then
	# Extract the states where recorded breaches occurred (for iteration)
	states=$(cut -f2 -d"	" "$file" | tail -n +2 | sort | uniq)

	# Initialise the max variables
	maxCount=0
	maxState=""

	# Iterate through each state
	for state in $states; do
		# Count the occurrences of the year in the current state
		count=$(cut -f2,8 -d"	" "$file" | tail -n +2| grep "^$state	$cmd" | wc -l)

		# Check count is larger than current maximum
		if [[ $count -gt $maxCount ]]; 
		then
        	maxCount=$count
        	maxState=$maxState
    	fi
	done

	if [[ $maxCount -eq 0 ]];
	then
		echo "The year does not appear in the provided file with filename: $file.
		"
		exit 1
	else
		echo "State with greatest number of incidents for $cmd is in $maxState with count $maxCount
		"
		exit 0
	fi
elif [[ $cmd =~ .{1,} ]];
then
	echo "	Invalid command, the valid commands and their inputs are below: $options"
	exit 1
else
	echo "	Command Options: $options"
	exit 0
fi

echo "got to end"
exit 0;
